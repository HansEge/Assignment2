// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="advios,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.162000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=170,HLS_SYN_LUT=187}" *)

module advios (
        clk,
        reset,
        ctrl,
        inSwitch,
        outLeds
);


input   clk;
input   reset;
input  [3:0] ctrl;
input  [3:0] inSwitch;
output  [3:0] outLeds;

reg[3:0] outLeds;

wire   [0:0] advios_ssdm_threa_load_fu_144_p1;
wire   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_advios_clkDivide_fu_100_oneSecPulse;
wire    grp_advios_clkDivide_fu_100_oneSecPulse_ap_vld;
wire   [31:0] grp_advios_clkDivide_fu_100_advios_clkCount_o;
wire    grp_advios_clkDivide_fu_100_advios_clkCount_o_ap_vld;
wire   [3:0] grp_advios_adviosThread_fu_122_outLeds;
wire    grp_advios_adviosThread_fu_122_outLeds_ap_vld;
wire    grp_advios_adviosThread_fu_122_oneSecPulse;
wire    ap_CS_fsm_state2;
reg   [0:0] oneSecPulse;
reg   [31:0] advios_clkCount;
wire   [0:0] advios_ssdm_threa_1_load_fu_148_p1;

advios_clkDivide grp_advios_clkDivide_fu_100(
    .ap_clk(clk),
    .ap_rst(reset),
    .oneSecPulse(grp_advios_clkDivide_fu_100_oneSecPulse),
    .oneSecPulse_ap_vld(grp_advios_clkDivide_fu_100_oneSecPulse_ap_vld),
    .advios_clkCount_i(advios_clkCount),
    .advios_clkCount_o(grp_advios_clkDivide_fu_100_advios_clkCount_o),
    .advios_clkCount_o_ap_vld(grp_advios_clkDivide_fu_100_advios_clkCount_o_ap_vld)
);

advios_adviosThread grp_advios_adviosThread_fu_122(
    .ap_clk(clk),
    .ap_rst(reset),
    .ctrl(ctrl),
    .inSwitch(inSwitch),
    .outLeds(grp_advios_adviosThread_fu_122_outLeds),
    .outLeds_ap_vld(grp_advios_adviosThread_fu_122_outLeds_ap_vld),
    .oneSecPulse(grp_advios_adviosThread_fu_122_oneSecPulse)
);

always @ (posedge clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'd0 == advios_ssdm_threa_load_fu_144_p1) & (1'd0 == advios_ssdm_threa_1_load_fu_148_p1))) begin
        advios_clkCount <= 32'd0;
    end else if ((1'b1 == grp_advios_clkDivide_fu_100_advios_clkCount_o_ap_vld)) begin
        advios_clkCount <= grp_advios_clkDivide_fu_100_advios_clkCount_o;
    end
end

always @ (posedge clk) begin
    if ((1'b1 == grp_advios_clkDivide_fu_100_oneSecPulse_ap_vld)) begin
        oneSecPulse <= grp_advios_clkDivide_fu_100_oneSecPulse;
    end
end

always @ (posedge clk) begin
    if ((1'b1 == grp_advios_adviosThread_fu_122_outLeds_ap_vld)) begin
        outLeds <= grp_advios_adviosThread_fu_122_outLeds;
    end
end

assign advios_ssdm_threa_1_load_fu_148_p1 = 1'd0;

assign advios_ssdm_threa_load_fu_144_p1 = 1'd0;

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign grp_advios_adviosThread_fu_122_oneSecPulse = oneSecPulse;

endmodule //advios
